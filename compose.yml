services:
  db:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${DB_PASSWORD}
      - MSSQL_TCP_PORT=${DB_PORT:-1433}
    ports:
      - "${DB_PORT:-1433}:${DB_PORT:-1433}"
    platform: "linux/amd64"
#    healthcheck:
#      test: /opt/mssql-tools18/bin/sqlcmd -S localhost,$${MSSQL_TCP_PORT} -U sa -P $${SA_PASSWORD} -C -Q "SELECT 1" -b -o /dev/null
#      interval: 10s
#      timeout: 3s
#      retries: 10
#      start_interval: 20s
#      start_period: 20s
    volumes:
      - mssql:/var/opt/mssql
  backend:
    build: ./backend
    develop:
      watch:
        - action: rebuild
          path: ./backend

    ports:
      - "${BACKEND_PORT:-3001}:3001"
    depends_on:
      - db
      - loki
      - tempo
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - SECRET=${SECRET}
      - BACKEND_URL=${VITE_BACKEND_URL}
  frontend:
    build: ./frontend
    ports:
      - "${FRONTEND_PORT:-4173}:${FRONTEND_PORT:-4173}"
    entrypoint: "pnpm preview --host --port ${FRONTEND_PORT:-4173}"
    develop:
      watch:
        - action: rebuild
          path: frontend
    depends_on:
      - backend
    environment:
      - VITE_BACKEND_URL=${VITE_BACKEND_URL}
  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY}
      - MINIO_DEFAULT_BUCKETS=${S3_BUCKET_NAME}
    volumes:
      - minio_data:/data
    ports:
      - "${S3_PORT:-9000}:${S3_PORT:-9000}"
      - "${S3_CONSOLE_PORT:-9001}:${S3_CONSOLE_PORT:-9001}"
  prometheus:
    image: prom/prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "${PROMETHEUS_PORT:-9090}:${PROMETHEUS_PORT:-9090}"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.listen-address=:${PROMETHEUS_PORT:-9090}"
  grafana:
    image: grafana/grafana
    ports:
      - "${GRAFANA_PORT:-7000}:3000"
    depends_on:
      - prometheus
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
  loki:
    image: grafana/loki:latest
    ports:
      - "${LOKI_PORT:-3100}:${LOKI_PORT:-3100}"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.expand-env=true -config.file=/etc/loki/local-config.yaml
  tempo:
    image: grafana/tempo:2.7.2
    ports:
      - "${TEMPO_HTTP_PORT:-3200}:3200" # HTTP API port
      - "${TEMPO_OTLP_PORT:-4318}:4318" # OTLP HTTP receiver port
      - "${TEMPO_GRPC_PORT:-9095}:9095" # gRPC port
    command: [ "-config.file=/etc/tempo/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo/tempo.yaml
      - tempo-data:/var/tempo

networks:
  bed-assignment:
    name: "bed-assignment"
    driver: bridge

volumes:
  minio_data:

  mssql:

  prometheus_data:

  grafana:

  tempo-data:

  loki_data: